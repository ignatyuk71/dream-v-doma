<?php

namespace App\Http\Controllers\Api;

use App\Http\Controllers\Controller;
use App\Services\NovaPoshtaService;
use Illuminate\Http\Request;

class NovaPoshtaController extends Controller
{
    protected NovaPoshtaService $np;

    public function __construct(NovaPoshtaService $np)
    {
        $this->np = $np;
    }

    /**
     * üîç –ü–æ—à—É–∫ –Ω–∞—Å–µ–ª–µ–Ω–∏—Ö –ø—É–Ω–∫—Ç—ñ–≤ –∑–∞ –Ω–∞–∑–≤–æ—é
     */
    public function searchCities(Request $request)
    {
        $query = $request->input('q');

        if (!$query || strlen($query) < 2) {
            return response()->json([]);
        }

        $results = $this->np->searchCities($query);

        return response()->json($results);
    }

    /**
     * üè§ –û—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ –≤—ñ–¥–¥—ñ–ª–µ–Ω—å –∞–±–æ –ø–æ—à—Ç–æ–º–∞—Ç—ñ–≤
     */
    public function getWarehouses(Request $request)
    {
        $ref = $request->input('ref');
        $type = $request->input('type', 'Warehouse'); // –∞–±–æ 'Postomat'

        if (!$ref) {
            return response()->json(['error' => 'Missing city reference'], 400);
        }

        $results = $this->np->getWarehouses($ref, $type);

        return response()->json($results);
    }

    /**
     * üì¶ –û—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–µ –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ø–æ np_ref
     */
    public function getWarehouseByRef(string $ref)
    {
        $warehouse = $this->np->getWarehouseByRef($ref);

        if ($warehouse) {
            return response()->json($warehouse);
        }

        return response()->json([
            'message' => '–í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ',
        ], 404);
    }
}
